{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","noise/improved_perlin_noise_2d.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","GRID","GRID_MASK","SPEED","perlinNoise2D","w","h","t","l","permutation","Uint8ClampedArray","_","k","x","y","xi0","yi0","xi1","yi1","tx","ty","u","quintic","v","x0","x1","y0","y1","a","gradientDotV","hash","b","c","d","perlin","Math","floor","perm","z","seed","sort","random"],"mappings":"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","file":"static/js/0.1465600f.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","const GRID = 256; // 纹理划分 256 个格子\nconst GRID_MASK = GRID - 1;\nconst SPEED = [2, 2];\n\nexport default function perlinNoise2D(w, h, t, l, permutation) {\n  return Uint8ClampedArray.from({length: w * h}, (_, k) => {\n    const x = ((k % w + t * SPEED[0]) / l) % GRID;\n    const y = ((Math.floor(k / w) + t * SPEED[1]) / l) % GRID;\n    return perlin(x, y, permutation);\n  });\n}\n\nfunction perlin(x, y, permutation) {\n  const xi0 = x & GRID_MASK;\n  const yi0 = y & GRID_MASK;\n\n  const xi1 = (xi0 + 1) & GRID_MASK;\n  const yi1 = (yi0 + 1) & GRID_MASK;\n\n  const tx = x - xi0;\n  const ty = y - yi0;\n\n  const u = quintic(tx);\n  const v = quintic(ty);\n\n  // generate vectors going from the grid points to p\n  const x0 = tx;\n  const x1 = tx - 1;\n  const y0 = ty;\n  const y1 = ty - 1;\n\n  const a = gradientDotV(hash(xi0, yi0, permutation), x0, y0);\n  const b = gradientDotV(hash(xi1, yi0, permutation), x1, y0);\n  const c = gradientDotV(hash(xi0, yi1, permutation), x0, y1);\n  const d = gradientDotV(hash(xi1, yi1, permutation), x1, y1);\n\n  const k0 = a;\n  const k1 = (b - a);\n  const k2 = (c - a);\n  const k4 = (a + d - b - c);\n\n  return ((k0 + k1 * u + k2 * v + k4 * u * v) + 0.5) * 256;\n}\n\nfunction gradientDotV(perm, x, y, z = 0) {\n  switch (perm & 15) {\n    case  0: return  x + y; // (1,1,0)\n    case  1: return -x + y; // (-1,1,0)\n    case  2: return  x - y; // (1,-1,0)\n    case  3: return -x - y; // (-1,-1,0)\n    case  4: return  x + z; // (1,0,1)\n    case  5: return -x + z; // (-1,0,1)\n    case  6: return  x - z; // (1,0,-1)\n    case  7: return -x - z; // (-1,0,-1)\n    case  8: return  y + z; // (0,1,1),\n    case  9: return -y + z; // (0,-1,1),\n    case 10: return  y - z; // (0,1,-1),\n    case 11: return -y - z; // (0,-1,-1)\n    case 12: return  y + x; // (1,1,0)\n    case 13: return -x + y; // (-1,1,0)\n    case 14: return -y + z; // (0,-1,1)\n    case 15: return -y - z; // (0,-1,-1)\n    default: return 0;\n  }\n}\n\nfunction hash(x, y, permutation) {\n  return (permutation[(permutation[x] + y) & GRID_MASK]) & GRID_MASK;\n}\n\nfunction quintic(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nexport function seed() {\n  const arr = Array.from({length: GRID}, (_, k) => k).sort(() => Math.random() - 0.5);\n  return [...arr, ...arr];\n}\n"],"sourceRoot":""}